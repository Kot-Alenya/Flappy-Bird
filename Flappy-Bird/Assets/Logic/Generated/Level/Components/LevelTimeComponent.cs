//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelContext {

    public LevelEntity timeEntity { get { return GetGroup(LevelMatcher.Time).GetSingleEntity(); } }
    public FlappyBird.Gameplay.Time.TimeComponent time { get { return timeEntity.time; } }
    public bool hasTime { get { return timeEntity != null; } }

    public LevelEntity SetTime(float newDeltaTime) {
        if (hasTime) {
            throw new Entitas.EntitasException("Could not set Time!\n" + this + " already has an entity with FlappyBird.Gameplay.Time.TimeComponent!",
                "You should check if the context already has a timeEntity before setting it or use context.ReplaceTime().");
        }
        var entity = CreateEntity();
        entity.AddTime(newDeltaTime);
        return entity;
    }

    public void ReplaceTime(float newDeltaTime) {
        var entity = timeEntity;
        if (entity == null) {
            entity = SetTime(newDeltaTime);
        } else {
            entity.ReplaceTime(newDeltaTime);
        }
    }

    public void RemoveTime() {
        timeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelEntity {

    public FlappyBird.Gameplay.Time.TimeComponent time { get { return (FlappyBird.Gameplay.Time.TimeComponent)GetComponent(LevelComponentsLookup.Time); } }
    public bool hasTime { get { return HasComponent(LevelComponentsLookup.Time); } }

    public void AddTime(float newDeltaTime) {
        var index = LevelComponentsLookup.Time;
        var component = (FlappyBird.Gameplay.Time.TimeComponent)CreateComponent(index, typeof(FlappyBird.Gameplay.Time.TimeComponent));
        component.DeltaTime = newDeltaTime;
        AddComponent(index, component);
    }

    public void ReplaceTime(float newDeltaTime) {
        var index = LevelComponentsLookup.Time;
        var component = (FlappyBird.Gameplay.Time.TimeComponent)CreateComponent(index, typeof(FlappyBird.Gameplay.Time.TimeComponent));
        component.DeltaTime = newDeltaTime;
        ReplaceComponent(index, component);
    }

    public void RemoveTime() {
        RemoveComponent(LevelComponentsLookup.Time);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LevelMatcher {

    static Entitas.IMatcher<LevelEntity> _matcherTime;

    public static Entitas.IMatcher<LevelEntity> Time {
        get {
            if (_matcherTime == null) {
                var matcher = (Entitas.Matcher<LevelEntity>)Entitas.Matcher<LevelEntity>.AllOf(LevelComponentsLookup.Time);
                matcher.componentNames = LevelComponentsLookup.componentNames;
                _matcherTime = matcher;
            }

            return _matcherTime;
        }
    }
}
