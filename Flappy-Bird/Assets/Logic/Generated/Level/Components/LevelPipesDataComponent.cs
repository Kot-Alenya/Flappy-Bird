//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelContext {

    public LevelEntity pipesDataEntity { get { return GetGroup(LevelMatcher.PipesData).GetSingleEntity(); } }
    public FlappyBird.Gameplay.Pipes.PipesDataComponent pipesData { get { return pipesDataEntity.pipesData; } }
    public bool hasPipesData { get { return pipesDataEntity != null; } }

    public LevelEntity SetPipesData(FlappyBird.Gameplay.Pipes.PipesFactory newFactory, float newTimeToSpawn, float newSpawnRate, float newRemoveRate) {
        if (hasPipesData) {
            throw new Entitas.EntitasException("Could not set PipesData!\n" + this + " already has an entity with FlappyBird.Gameplay.Pipes.PipesDataComponent!",
                "You should check if the context already has a pipesDataEntity before setting it or use context.ReplacePipesData().");
        }
        var entity = CreateEntity();
        entity.AddPipesData(newFactory, newTimeToSpawn, newSpawnRate, newRemoveRate);
        return entity;
    }

    public void ReplacePipesData(FlappyBird.Gameplay.Pipes.PipesFactory newFactory, float newTimeToSpawn, float newSpawnRate, float newRemoveRate) {
        var entity = pipesDataEntity;
        if (entity == null) {
            entity = SetPipesData(newFactory, newTimeToSpawn, newSpawnRate, newRemoveRate);
        } else {
            entity.ReplacePipesData(newFactory, newTimeToSpawn, newSpawnRate, newRemoveRate);
        }
    }

    public void RemovePipesData() {
        pipesDataEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelEntity {

    public FlappyBird.Gameplay.Pipes.PipesDataComponent pipesData { get { return (FlappyBird.Gameplay.Pipes.PipesDataComponent)GetComponent(LevelComponentsLookup.PipesData); } }
    public bool hasPipesData { get { return HasComponent(LevelComponentsLookup.PipesData); } }

    public void AddPipesData(FlappyBird.Gameplay.Pipes.PipesFactory newFactory, float newTimeToSpawn, float newSpawnRate, float newRemoveRate) {
        var index = LevelComponentsLookup.PipesData;
        var component = (FlappyBird.Gameplay.Pipes.PipesDataComponent)CreateComponent(index, typeof(FlappyBird.Gameplay.Pipes.PipesDataComponent));
        component.Factory = newFactory;
        component.TimeToSpawn = newTimeToSpawn;
        component.SpawnRate = newSpawnRate;
        component.RemoveRate = newRemoveRate;
        AddComponent(index, component);
    }

    public void ReplacePipesData(FlappyBird.Gameplay.Pipes.PipesFactory newFactory, float newTimeToSpawn, float newSpawnRate, float newRemoveRate) {
        var index = LevelComponentsLookup.PipesData;
        var component = (FlappyBird.Gameplay.Pipes.PipesDataComponent)CreateComponent(index, typeof(FlappyBird.Gameplay.Pipes.PipesDataComponent));
        component.Factory = newFactory;
        component.TimeToSpawn = newTimeToSpawn;
        component.SpawnRate = newSpawnRate;
        component.RemoveRate = newRemoveRate;
        ReplaceComponent(index, component);
    }

    public void RemovePipesData() {
        RemoveComponent(LevelComponentsLookup.PipesData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LevelMatcher {

    static Entitas.IMatcher<LevelEntity> _matcherPipesData;

    public static Entitas.IMatcher<LevelEntity> PipesData {
        get {
            if (_matcherPipesData == null) {
                var matcher = (Entitas.Matcher<LevelEntity>)Entitas.Matcher<LevelEntity>.AllOf(LevelComponentsLookup.PipesData);
                matcher.componentNames = LevelComponentsLookup.componentNames;
                _matcherPipesData = matcher;
            }

            return _matcherPipesData;
        }
    }
}
