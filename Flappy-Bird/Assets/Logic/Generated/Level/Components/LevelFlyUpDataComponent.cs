//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelContext {

    public LevelEntity flyUpDataEntity { get { return GetGroup(LevelMatcher.FlyUpData).GetSingleEntity(); } }
    public FlappyBird.Gameplay.Bird.FlyUpDataComponent flyUpData { get { return flyUpDataEntity.flyUpData; } }
    public bool hasFlyUpData { get { return flyUpDataEntity != null; } }

    public LevelEntity SetFlyUpData(UnityEngine.InputSystem.InputAction newAction, float newVelocity) {
        if (hasFlyUpData) {
            throw new Entitas.EntitasException("Could not set FlyUpData!\n" + this + " already has an entity with FlappyBird.Gameplay.Bird.FlyUpDataComponent!",
                "You should check if the context already has a flyUpDataEntity before setting it or use context.ReplaceFlyUpData().");
        }
        var entity = CreateEntity();
        entity.AddFlyUpData(newAction, newVelocity);
        return entity;
    }

    public void ReplaceFlyUpData(UnityEngine.InputSystem.InputAction newAction, float newVelocity) {
        var entity = flyUpDataEntity;
        if (entity == null) {
            entity = SetFlyUpData(newAction, newVelocity);
        } else {
            entity.ReplaceFlyUpData(newAction, newVelocity);
        }
    }

    public void RemoveFlyUpData() {
        flyUpDataEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelEntity {

    public FlappyBird.Gameplay.Bird.FlyUpDataComponent flyUpData { get { return (FlappyBird.Gameplay.Bird.FlyUpDataComponent)GetComponent(LevelComponentsLookup.FlyUpData); } }
    public bool hasFlyUpData { get { return HasComponent(LevelComponentsLookup.FlyUpData); } }

    public void AddFlyUpData(UnityEngine.InputSystem.InputAction newAction, float newVelocity) {
        var index = LevelComponentsLookup.FlyUpData;
        var component = (FlappyBird.Gameplay.Bird.FlyUpDataComponent)CreateComponent(index, typeof(FlappyBird.Gameplay.Bird.FlyUpDataComponent));
        component.Action = newAction;
        component.Velocity = newVelocity;
        AddComponent(index, component);
    }

    public void ReplaceFlyUpData(UnityEngine.InputSystem.InputAction newAction, float newVelocity) {
        var index = LevelComponentsLookup.FlyUpData;
        var component = (FlappyBird.Gameplay.Bird.FlyUpDataComponent)CreateComponent(index, typeof(FlappyBird.Gameplay.Bird.FlyUpDataComponent));
        component.Action = newAction;
        component.Velocity = newVelocity;
        ReplaceComponent(index, component);
    }

    public void RemoveFlyUpData() {
        RemoveComponent(LevelComponentsLookup.FlyUpData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LevelMatcher {

    static Entitas.IMatcher<LevelEntity> _matcherFlyUpData;

    public static Entitas.IMatcher<LevelEntity> FlyUpData {
        get {
            if (_matcherFlyUpData == null) {
                var matcher = (Entitas.Matcher<LevelEntity>)Entitas.Matcher<LevelEntity>.AllOf(LevelComponentsLookup.FlyUpData);
                matcher.componentNames = LevelComponentsLookup.componentNames;
                _matcherFlyUpData = matcher;
            }

            return _matcherFlyUpData;
        }
    }
}
